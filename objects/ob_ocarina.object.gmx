<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_oot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parar musica
audio_master_gain(0.35);
audio_stop_sound(snd_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Funcionamiento
//Mascara de majora en canciones de majoras mask y ocarina etc
if global.menu &gt; 12 &amp;&amp; global.menu &lt; 22 
{
sprite_index = sp_majoras
background_index = 1
}
else if global.menu &lt;= 12 {
sprite_index = sp_oot
background_index = 0
}
else if global.menu = 22 &amp;&amp; !global.badTimeConocido = 1
{
sprite_index = sp_null
background_index = 2
}
else if global.menu = 22 &amp;&amp; global.badTimeConocido = 1
{
sprite_index = sp_surprise
background_index = 2
}

//Limite de tiempo (Reseteo por ser un matao)
    if global.keyPos &gt;= 1 &amp;&amp; global.timeStart = 0{
        global.timeStart = 1
    }
    
    if  global.timeStart = 1 {
        global.timeCount += 1
    }
    if global.timeCount = 250{
        audio_play_sound(snd_mal,2,false);
        global.keyPos = 12;
        global.Song = '-';
        global.timeCount = 0
        global.timeStart = 0
    }
            
//Force reset para evitar bugs
if global.keyPos &gt;12
{
global.keyPos = 12
}            
//Mantener partitura en pantalla hasta que toques la primera nota de la siguiente 
//y reseteo general en keyPos = 12
    
    if !keyboard_check_pressed(vk_f3) ^^ !keyboard_check_pressed(ord("Q")) ^^ !keyboard_check_pressed(ord("E")){    
        if (keyboard_check_pressed(vk_anykey) &amp;&amp; (global.keyPos = 12)) {
                    reseteo();
                    audio_stop_all();
            }
        else if (global.keyPos = 12)
        {
            global.timeCount =0
            global.timeStart = -1
        }
}

//Crear notas en partitura seg√∫n orden y posicion

    if (global.keyPos &gt; 0) &amp;&amp; (global.keyPos &lt; 9){
       switch (global.keyPosY) {
              case 1:
                   instance_create(global.coordenadaX[global.keyPos],global.coordenadaY[global.keyPosY],ob_A);
              break;
              case 2:
                   instance_create(global.coordenadaX[global.keyPos],global.coordenadaY[global.keyPosY],ob_aba); 
              break;
              case 3:
                   instance_create(global.coordenadaX[global.keyPos],global.coordenadaY[global.keyPosY],ob_dch);
              break;
              case 4:
                   instance_create(global.coordenadaX[global.keyPos],global.coordenadaY[global.keyPosY],ob_izq);
              break;
              case 5:
                   instance_create(global.coordenadaX[global.keyPos],global.coordenadaY[global.keyPosY],ob_arr); 
              break;
       }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Canciones
switch (global.keyPos) {
       case 4: //canciones 4 notas
            global.Song = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3])
            global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3])
            show_debug_message(global.Song)
            switch global.Song 
                    {
                    case 'EEBD':
                        audio_play_sound(snd_surprise,1,false)
                        global.Song = '-'
                        global.badTime = 1
                        global.keyPos = 12 
                        global.menu = 22  
                        show_debug_message("You feel like you're going to have a bad time.")   
                    break;
                    }
       break;
       case 5: //Canciones 5 notas 
            global.Song = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4])
            global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4])
            show_debug_message(global.Song)
            switch global.Song 
                    {
                case 'ECDDA':
                
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Serenade_of_Water,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 9
                    break;
                    }
       break;
       case 6:
            global.Song = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5])
            global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5])
            show_debug_message(global.Song)   
            switch global.Song { 
            
                case 'CDACDA': 
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Sarias_Song,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 2
            
                    
                break;
                case 'ECBECB': 
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Song_of_Storms,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 6
                break;
                
                case 'ECEDCE': 
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Requiem_of_Spirit,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 10
                break;
                
                case 'ABDABD':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Zeldas_Lullaby,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 1
                break;
                
                case 'DECDEC':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Song_of_Time,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 3
                break;
            
                case 'BADBAD':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Eponas_Song,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 4
                break;
                
                case 'DCBDCB':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Suns_Song,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 5
                break;
                
                case 'EBADAD':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Minuet_of_Forest,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                break;
                
                case 'BDBDAB':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Prelude_of_Light,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 12
                break;
                
                case 'DDEECC':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Song_of_Double_Time,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 13
                break;
                
                case 'ADCADC':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Song_of_Healing,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 20
                break;
                
                case 'CABCAB':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Song_of_Soaring,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 15
                break;
                case 'DCECDB':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Oath_to_Order,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 19
                break;
                case 'CEDCED':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Inverted_Song_of_Time,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 14
                break;
                }
       break;
       case 7:
            global.Song = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5]+global.partitura[6])
            global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5]+global.partitura[6])//(global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5])
            show_debug_message(global.Song)
            
            switch global.Song 
                    {
                case 'ADDEADC':
                
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Nocturne_of_Shadow,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 11
                    break;
                    
                case 'BABAEDE':
                
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Sonata_of_Awakening,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 16
                    break;
                    
                case 'DADCDBA':
                    
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Elegy_of_Emptiness,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 17
                    break;
                    
                case 'ABADCAD':
                    
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_New_Wave_Bossa_Nova,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 21
                    break;   
                }
       break;
       case 8:
            global.Song = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5]+global.partitura[6]+global.partitura[7])
            global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5]+global.partitura[6]+global.partitura[7])//(global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5])
            show_debug_message(global.Song)
            switch global.Song {
                case 'CECEDCDC':
                
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound(snd_Bolero_of_Fire,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 8
                    break;
                    
                case 'EDAEDADE':
                    audio_play_sound(snd_bien,2,false)
                    audio_play_sound( snd_Goron_Lullaby,1,false)
                    global.Song = '-'
                    global.keyPos = 12
                    global.menu = 18
                    break;
                
                default:
                    global.timeStart = 0
                    global.timeCount = 0
                    audio_play_sound(snd_mal,2,false);
                    global.keyPos = 12
                    global.Song = '-';
                break;  
                }
       break;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
global.SongView = (global.partitura[0]+global.partitura[1]+global.partitura[2]+global.partitura[3]+global.partitura[4]+global.partitura[5]+global.partitura[6]+global.partitura[7])

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Misc
//Crear variable permanente cuando el jugador desbloquea la canci√≥n secreta
if global.badTime = 1 {
global.badTimeConocido = 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key imput 

if keyboard_key{    
    if keyboard_check_pressed(vk_left)
       {
    show_debug_message('A');
    global.partitura[global.keyPos] = 'A'
    global.keyPos += 1
    global.keyPosY = 4;
    global.timeCount = 0
    audio_play_sound(snd_izq,1,false)
    
       }
    else if keyboard_check_pressed(vk_right)
       {
    show_debug_message('D');
    global.partitura[global.keyPos] = 'D'
    global.keyPos += 1
    global.keyPosY = 3;
    global.timeCount = 0
    audio_play_sound(snd_dch,1,false)
    
       }
    else if keyboard_check_pressed(vk_up)
       {
    show_debug_message('B');
    global.partitura[global.keyPos] = 'B'
    global.keyPos += 1
    global.keyPosY = 5;
    global.timeCount = 0
    audio_play_sound(snd_arr,1,false)
    
       }
    else if keyboard_check_pressed(vk_down)
       {
    show_debug_message('C');
    global.partitura[global.keyPos] = 'C'
    global.keyPos += 1
    global.keyPosY = 2;
    global.timeCount = 0
    audio_play_sound(snd_aba,1,false)
    
       }
    else if keyboard_check_pressed(ord('A'))
       {
    show_debug_message('E');
    global.partitura[global.keyPos] = 'E'
    global.keyPos += 1
    global.keyPosY = 1;
    global.timeCount = 0
    audio_play_sound(snd_A,1,false)
}
       //Resetear
    else if keyboard_check_pressed(ord('R'))
       {
        reseteo(); 
   }
   
   if keyboard_check(vk_escape){
   room_goto(rm_language)
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
