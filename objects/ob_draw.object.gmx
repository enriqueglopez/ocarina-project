<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mostrar u ocultar (F3+left shift)

if keyboard_key{
    if global.debugText = 0 &amp;&amp; keyboard_check_pressed(vk_f3)
    {
    global.debugText = 1
    show_debug_message ("debugText = 1")
    }
    else if global.debugText = 1 &amp;&amp; keyboard_check_pressed(vk_f3)
    {
    global.debugText = 0
    show_debug_message ("debugText = 0")
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>       ///Variables dibujadas (debug)
        
          //Texto previo
        if global.debugText = 1 {
        draw_set_font(font1);
        draw_set_colour(c_purple)
        
        draw_text(x-global.distanciaXtexto,y,"Case " + string(global.SongView))
        draw_text(x-global.distanciaXtexto,y+30,"keyPos " + string(global.keyPos))
        draw_text(x-global.distanciaXtexto,y+60,"Bad Time "+ string(global.badTime))
        draw_text(x-global.distanciaXtexto,y+90,"Time counter " + string(global.timeCount))
        
        draw_text(ob_boton_izq.x-7,ob_boton_izq.y-64,"A")
        draw_text(ob_boton_arr.x-7,ob_boton_arr.y-64,"B")
        draw_text(ob_boton_aba.x-7,ob_boton_aba.y-64,"C")
        draw_text(ob_boton_dch.x-7,ob_boton_dch.y-64,"D")
        draw_text(ob_boton_A.x-7,ob_boton_A.y-64,"E")
}
       
        

        
            
           





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
